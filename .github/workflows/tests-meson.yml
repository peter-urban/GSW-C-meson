name: test meson wrapper

on:
  pull_request:
  push:
    branches: [master]
  workflow_dispatch:

jobs:
  run:
    name: meson test ${{ matrix.os }} ${{ matrix.compiler }} ${{ matrix.library }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        compiler: [gcc, clang, clang-cl, cl]
        library: ["static", "shared"]
        include:
          - compiler: gcc
            os: ubuntu-latest
          - compiler: clang
            os: macos-latest
          - compiler: clang-cl
            os: windows-latest
          - compiler: cl
            os: windows-latest
      fail-fast: false

    env:
      CC: ${{matrix.compiler}}
      CXX: ${{matrix.compiler}}

    steps:
      - uses: actions/checkout@v4
      #- uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Prepare MSVC
        if: matrix.os == 'windows-latest'
        uses: bus1/cabuild/action/msdevshell@v1
        with:
          architecture: x64

      - name: Set up Clang
        if: matrix.compiler == 'clang-cl'
        uses: egor-tensin/setup-clang@v1
        with:
          version: latest

      # make sure meson can find msvc
      - uses: TheMrMilchmann/setup-msvc-dev@v3
        if: matrix.os == 'windows-latest'
        with:
          arch: x64

      - name: install dependencies
        run: python -m pip install meson ninja

      - name: Compile
        run: |
          meson setup builddir -Ddefault_library=${{matrix.library}}
          meson compile -C builddir

      - name: Test
        run: |
          meson test -C builddir --print-errorlogs -v
